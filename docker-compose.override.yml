version: '3.4'

services:
  
  productdb:
    container_name: productdb
    restart: always
    ports:
        - "27017:27017"
    volumes:
        - mongo_data:/data/db

  basketdb:
    container_name: basketdb
    restart: always    
    ports:
        - "6379:6379"

  invoicedb: 
    container_name: invoicedb
    ports:
        - "1433:1433"
    environment:
        SA_PASSWORD: "Omar123456"
        ACCEPT_EULA: "Y"
 
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"

  userapi:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
       - "8002:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  invoiceapi:
    container_name: invoiceapi
    environment:
       - ASPNETCORE_ENVIRONMENT=Development
       - "ConnectionStrings:InvoiceConnectionString=Server=invoicedb;Database=InvoiceDb;User Id=sa;Password=Omar123456"            
       - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - invoicedb
      - rabbitmq
    ports:
      - "8003:80"

  basket.api:
    container_name: basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    ports:
      - "8001:80"
    depends_on:
      - basketdb
      - rabbitmq
  
  productapi:
    container_name: productapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=mongodb://productdb:27017"
    depends_on:
      - productdb
    ports:
      - "8000:80"

  apigateway:
    container_name: apigateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - basket.api
      - productapi
      - userapi
      - invoiceapi
    ports:
      - "8010:80"


  elasticsearch:
    container_name: elasticsearch
    environment:
        - xpack.monitoring.enabled=true
        - xpack.watcher.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - discovery.type=single-node
    ports:
        - "9200:9200"
    volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data   

  kibana:
    container_name: kibana
    environment:        
        - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
        - elasticsearch
    ports:
        - "5601:5601"  


  spaclient:
    ports:
       - "5104:80"
       - "5000:80"


  watchstatusapp:
    container_name: watchstatusapp
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - HealthChecksUI__HealthChecks__0__Name=Product Health Check
        - HealthChecksUI__HealthChecks__0__Uri=http://productapi/hc
        - HealthChecksUI__HealthChecks__1__Name=Basket Health Check
        - HealthChecksUI__HealthChecks__1__Uri=http://basket.api/hc
        - HealthChecksUI__HealthChecks__2__Name=Invoice Health Check
        - HealthChecksUI__HealthChecks__2__Uri=http://invoiceapi/hc
        - HealthChecksUI__HealthChecks__3__Name=User Health Check
        - HealthChecksUI__HealthChecks__3__Uri=http://userapi/hc
        - HealthChecksUI__HealthChecks__4__Name=Spa  Health Check
        - HealthChecksUI__HealthChecks__4__Uri=http://spaclient/hc 
        
    ports:
        - "8007:80"
