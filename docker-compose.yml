version: '3.4'

services:
  productdb:
    image: mongo
    networks:
      webnet:
       ipv4_address: 192.168.55.10
  
  basketdb:
    image: redis:alpine

  invoicedb: 
    image: mcr.microsoft.com/mssql/server:2017-latest

  postgresql_userdb:
    image: postgres:latest
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=adminadmin
      - POSTGRES_DB=userdb
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes: 
         - database-data:/var/lib/postgresql/data/

  pgadmin:
    image: dpage/pgadmin4
    environment: 
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    restart : unless-stopped
    volumes:
      - pgadmin:/root/.pgadmin

  userapi:
    image: ${DOCKER_REGISTRY-}userapi
    ports :
     - "1650"
    build:
      context: .
      dockerfile: User/UserApi/Dockerfile
    depends_on: 
      - postgresql_userdb

  rabbitmq:
    image: rabbitmq:3-management-alpine

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2

  invoiceapi:
    image: ${DOCKER_REGISTRY-}invoiceapi
    build:
      context: .
      dockerfile: Invoice/InvoiceApi/Dockerfile
    networks:
     - webnet

  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Basket/Basket.Api/Dockerfile
    networks:
     - webnet

  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ReverseProxy/APIGateway/Dockerfile
    networks:
      webnet:
       ipv4_address: 192.168.55.6

  productapi:
    image: ${DOCKER_REGISTRY-}productapi
    build:
      context: .
      dockerfile: Product/ProductApi/Dockerfile
    networks:
      webnet:
       ipv4_address: 192.168.55.7
 

  spaclient:
    image: ${DOCKER_REGISTRY-}spaclient
    build:
      context: .
      dockerfile: AppClients/SPAClient/Dockerfile
    networks:
      webnet:
       ipv4_address: 192.168.55.8

  watchstatusapp:
    image: ${DOCKER_REGISTRY-}watchstatusapp
    build:
      context: .
      dockerfile: AppClients/WatchStatus/WatchStatusApp/Dockerfile
    networks:
     - webnet

networks:
  webnet:
    driver : bridge 
    ipam:
     config:
      - subnet : 192.168.55.0/24
        gateway: 192.168.55.1

volumes:
  database-data:
  pgadmin:
  mongo_data:
  elasticsearch-data:




